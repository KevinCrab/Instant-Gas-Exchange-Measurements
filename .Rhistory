source(~\Documents\GitHub\Instant-Gas-Exchange-Measurements\R)
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/readGX.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/summary_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/CS_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/Find_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/GetValue_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/plot_GXcurve.R")
load("~/GitHub/Instant-Gas-Exchange-Measurements/data/cm 07-21-2017 ril leak1_.csv")
setwd("~/GitHub/Instant-Gas-Exchange-Measurements/data")
leak1_718 = read.csv("KX 07-18-2017 ril leak1_.csv")
View(leak1_718)
leak1_718 = read.csv("KX 07-18-2017 ril leak1_.csv",header=FALSE)
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/readGX.R")
genotypic_information = read.csv("genotypic imformation.csv",header=FALSE)
test = read.GX(filename = "KX 07-18-2017 ril leak1_.csv",leaf_rep = 1,genotypic_information)
test = read.GX(filename = "KX 07-18-2017 ril leak1_.csv",leaf_rep = 1,genotypic_information)
test = read.GX(leak1_718,leaf_rep = 1,genotypic_information)
prompt(plot_GXcurve)
plotGX = function(trait, table = NULL , genotype = NULL, id = NULL , dataset = NULL ){
if (length(table) > 0) {
t = TRUE
genolist = unique(table$genotype)
dataset = table
}else{ t = FALSE}
if (length(genotype) > 0 & nrow(dataset) > 0 ) {
if ( all(genotype %in% dataset$genotype) ){
g = TRUE
genolist = genotype
}else{
stop("genotype provided is not in the dataset.")
}
}else{ g = FALSE }
if (length(id) > 0 & nrow(dataset) > 0) {
if( all(id %in% dataset$name )){
d = TRUE
genolist = unique(dataset[which(dataset$name==id),"genotype"])
dataset = dataset[which(dataset$name==id),]
}else{
stop("id is not in the dataset.")
}
}else{ d = FALSE}
tgd = c(t,g,d)
if(sum(tgd == TRUE) != 1){
stop("Please have only one type of input.")
}else{
for (i in 1:length(genolist)) {
sub = subset(dataset, genotype == genolist[i])
sub = sub[order(as.numeric(sub$plot)),]
p=ggplot(sub, aes_string("FTime", trait)) +geom_point(aes(colour=name), size =5) + labs(title=paste(genolist[i],trait))+
theme_bw()+
theme(plot.title = element_text(size=30, face="bold"),
legend.title=element_blank(),
legend.text = element_text(size = 30),
legend.key.size = unit(2,"line"),
legend.position="bottom")
ggsave(filename=paste(trait," ",genolist[i],".png",sep=""))
cat(">>>>>>>>>>>>>>",genolist[i],trait,"curve saved")
}
}
}
prompt(plot_GXcurve)
prompt(plotGX)
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/readGX.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/summary_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/CS_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/Find_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/GetValue_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/plot_GXcurve.R")
leak1_718 = read.GX(filename = "KX 07-18-2017 ril leak1_.csv",leaf_rep = 1,gl)
setwd("~/GitHub/Instant-Gas-Exchange-Measurements/inst/extdata")
leak1_718 = read.GX(filename = "KX 07-18-2017 ril leak1_.csv",leaf_rep = 1,gl)
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/readGX.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/summary_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/CS_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/Find_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/GetValue_GXcurve.R")
source("~/GitHub/Instant-Gas-Exchange-Measurements/R/plotGX.R")
gl = "genotypic imformation.csv"
leak1_718 = read.GX(filename = "KX 07-18-2017 ril leak1_.csv",leaf_rep = 1,gl)
leak2_718 = read.GX(filename = "KX 07-18-2017 RIL leak2_.csv",leaf_rep = 1,gl)
steward_718 = read.GX(filename = "TMW 07-18-2017 ril stewart_.csv",leaf_rep = 1,gl)
leak1_719 = read.GX(filename = "KX 07-19-2017 RIL_ leak1.csv",leaf_rep = 2,gl)
# leak2_719 = read.GX(filename = "KX 07-19-2017 RIL_ leak2.csv",leaf_rep = 2)
leak1_720 = read.GX(filename = "nicole-7-20-2017-ril_leak1.csv",leaf_rep = 1,gl)
#leak2_720 = read.GX(filename = "nicole-7-20-2017-ril-leak2_.csv",leaf_rep = 1)
steward_720 = read.GX(filename = "KX 07-20-2017 RIL_Stewart.csv",leaf_rep = 1,gl)
leak1_721 = read.GX(filename = "cm 07-21-2017 ril leak1_.csv",leaf_rep = 2,gl)
leak2_721 = read.GX(filename = "cm 07-21-2017 ril leak2_.csv",leaf_rep = 2,gl)
steward_721 = read.GX(filename = "KX 07-21-2017 RIL STEWARD_.csv",leaf_rep = 2,gl)
AllCurve = CS(leak1_718,leak2_718,leak1_719,leak1_720,leak1_721,leak2_721,steward_720,steward_721,steward_718)
prompt(CS)
prompt(CS.GXcurve)
AllMean = GetValue(allCurve)
AllMean = GetValue(AllCurve)
table = AllMean
first.minute = TRUE
last.minute = TRUE
plot_name <- vector(mode="character", length=0)
leaf_name <- vector(mode="numeric", length=0)
name <- vector(mode="character", length=0)
genotype <- vector(mode="character", length=0)
range <- vector(mode="character", length=0)
row <- vector(mode="character", length=0)
block <- vector(mode="character", length=0)
if(first.minute){
Photo_first <- vector(mode="numeric", length=0)
Cond_first <- vector(mode="numeric", length=0)
Ci.Ca_first = vector(mode="numeric", length=0)
}
if(last.minute){
Photo_last <- vector(mode="numeric", length=0)
Cond_last <- vector(mode="numeric", length=0)
Ci.Ca_last = vector(mode="numeric", length=0)
}
nameslist = unique(table$name)
# get parameters
for (x in 1:length(nameslist)){
sub = table[which(table$name == nameslist[x]),]
plot_name = c(plot_name,sub[1,"plot"])
leaf_name = c(leaf_name,sub[1,"leaf"])
name = c(name,sub[1,"name"])
genotype = c(genotype,sub[1,"genotype"])
range = c(range,sub[1,"range"])
row = c(row,sub[1,"row"])
block = c(block,sub[1,"block"])
if(first.minute){
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
Photo_first = c(Photo_first, subfirstone$Photo[which.max(subfirstone$Cond)])
Cond_first = c(Cond_first, max(subfirstone$Cond))
Ci.Ca_first = c(Ci.Ca_first, subfirstone$`Ci/Ca`[which.max(subfirstone$Cond)])
}
if(last.minute){
sublastone = sub[c(max(which(sub$FTime < sub$FTime[length(sub$FTime)]-60)):length(sub$FTime)),]
Photo_last = c(Photo_last,mean(sublastone$Photo))
Cond_last = c(Cond_last, mean(sublastone$Cond))
Ci.Ca_last = c(Ci.Ca_last,mean(sublastone$`Ci/Ca`))
}
cat(x,"getting value for ----",nameslist[x],"\n")
}
#combining and assigning new class
ps = data.frame(plot_name, leaf_name, name,genotype,range,row,block)
if(first.minute) ps = cbind(ps,Photo_first,Cond_first,Ci.Ca_first)
if(last.minute) ps = cbind(ps,Photo_last,Cond_last,Ci.Ca_last)
class(ps) <- c("GXmean", class(ps))
#set emply vectors
plot_name <- vector(mode="character", length=0)
leaf_name <- vector(mode="numeric", length=0)
name <- vector(mode="character", length=0)
genotype <- vector(mode="character", length=0)
range <- vector(mode="character", length=0)
row <- vector(mode="character", length=0)
block <- vector(mode="character", length=0)
if(first.minute){
Photo_first <- vector(mode="numeric", length=0)
Cond_first <- vector(mode="numeric", length=0)
Ci.Ca_first = vector(mode="numeric", length=0)
}
if(last.minute){
Photo_last <- vector(mode="numeric", length=0)
Cond_last <- vector(mode="numeric", length=0)
Ci.Ca_last = vector(mode="numeric", length=0)
}
nameslist = unique(table$name)
# get parameters
for (x in 1:length(nameslist)){
sub = table[which(table$name == nameslist[x]),]
plot_name = c(plot_name,sub[1,"plot"])
leaf_name = c(leaf_name,sub[1,"leaf"])
name = c(name,sub[1,"name"])
genotype = c(genotype,sub[1,"genotype"])
range = c(range,sub[1,"range"])
row = c(row,sub[1,"row"])
block = c(block,sub[1,"block"])
if(first.minute){
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
Photo_first = c(Photo_first, subfirstone$Photo[which.max(subfirstone$Cond)])
Cond_first = c(Cond_first, max(subfirstone$Cond))
Ci.Ca_first = c(Ci.Ca_first, subfirstone$`Ci/Ca`[which.max(subfirstone$Cond)])
}
if(last.minute){
sublastone = sub[c(max(which(sub$FTime < sub$FTime[length(sub$FTime)]-60)):length(sub$FTime)),]
Photo_last = c(Photo_last,mean(sublastone$Photo))
Cond_last = c(Cond_last, mean(sublastone$Cond))
Ci.Ca_last = c(Ci.Ca_last,mean(sublastone$`Ci/Ca`))
}
cat(x,"getting value for ----",nameslist[x],"\n")
}
nameslist
# get parameters
for (x in 1:length(nameslist)){
sub = table[which(table$name == nameslist[x]),]
plot_name = c(plot_name,sub[1,"plot"])
leaf_name = c(leaf_name,sub[1,"leaf"])
name = c(name,sub[1,"name"])
genotype = c(genotype,sub[1,"genotype"])
range = c(range,sub[1,"range"])
row = c(row,sub[1,"row"])
block = c(block,sub[1,"block"])
if(first.minute){
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
Photo_first = c(Photo_first, subfirstone$Photo[which.max(subfirstone$Cond)])
Cond_first = c(Cond_first, max(subfirstone$Cond))
Ci.Ca_first = c(Ci.Ca_first, subfirstone$`Ci/Ca`[which.max(subfirstone$Cond)])
}
if(last.minute){
sublastone = sub[c(max(which(sub$FTime < sub$FTime[length(sub$FTime)]-60)):length(sub$FTime)),]
Photo_last = c(Photo_last,mean(sublastone$Photo))
Cond_last = c(Cond_last, mean(sublastone$Cond))
Ci.Ca_last = c(Ci.Ca_last,mean(sublastone$`Ci/Ca`))
}
cat(x,"getting value for ----",nameslist[x],"\n")
}
x=1
sub = table[which(table$name == nameslist[x]),]
plot_name = c(plot_name,sub[1,"plot"])
leaf_name = c(leaf_name,sub[1,"leaf"])
name = c(name,sub[1,"name"])
genotype = c(genotype,sub[1,"genotype"])
range = c(range,sub[1,"range"])
row = c(row,sub[1,"row"])
block = c(block,sub[1,"block"])
if(first.minute){
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
Photo_first = c(Photo_first, subfirstone$Photo[which.max(subfirstone$Cond)])
Cond_first = c(Cond_first, max(subfirstone$Cond))
Ci.Ca_first = c(Ci.Ca_first, subfirstone$`Ci/Ca`[which.max(subfirstone$Cond)])
}
first.minute
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
View(sub)
table = AllCurve
plot_name <- vector(mode="character", length=0)
leaf_name <- vector(mode="numeric", length=0)
name <- vector(mode="character", length=0)
genotype <- vector(mode="character", length=0)
range <- vector(mode="character", length=0)
row <- vector(mode="character", length=0)
block <- vector(mode="character", length=0)
if(first.minute){
Photo_first <- vector(mode="numeric", length=0)
Cond_first <- vector(mode="numeric", length=0)
Ci.Ca_first = vector(mode="numeric", length=0)
}
if(last.minute){
Photo_last <- vector(mode="numeric", length=0)
Cond_last <- vector(mode="numeric", length=0)
Ci.Ca_last = vector(mode="numeric", length=0)
}
nameslist = unique(table$name)
# get parameters
for (x in 1:length(nameslist)){
sub = table[which(table$name == nameslist[x]),]
plot_name = c(plot_name,sub[1,"plot"])
leaf_name = c(leaf_name,sub[1,"leaf"])
name = c(name,sub[1,"name"])
genotype = c(genotype,sub[1,"genotype"])
range = c(range,sub[1,"range"])
row = c(row,sub[1,"row"])
block = c(block,sub[1,"block"])
if(first.minute){
subfirstone = sub[c(1:min(which(sub$FTime > sub$FTime[1] +60))),]
Photo_first = c(Photo_first, subfirstone$Photo[which.max(subfirstone$Cond)])
Cond_first = c(Cond_first, max(subfirstone$Cond))
Ci.Ca_first = c(Ci.Ca_first, subfirstone$`Ci/Ca`[which.max(subfirstone$Cond)])
}
if(last.minute){
sublastone = sub[c(max(which(sub$FTime < sub$FTime[length(sub$FTime)]-60)):length(sub$FTime)),]
Photo_last = c(Photo_last,mean(sublastone$Photo))
Cond_last = c(Cond_last, mean(sublastone$Cond))
Ci.Ca_last = c(Ci.Ca_last,mean(sublastone$`Ci/Ca`))
}
cat(x,"getting value for ----",nameslist[x],"\n")
}
#combining and assigning new class
ps = data.frame(plot_name, leaf_name, name,genotype,range,row,block)
if(first.minute) ps = cbind(ps,Photo_first,Cond_first,Ci.Ca_first)
if(last.minute) ps = cbind(ps,Photo_last,Cond_last,Ci.Ca_last)
class(ps) <- c("GXmean", class(ps))
View(ps)
