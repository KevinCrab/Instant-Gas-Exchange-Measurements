PGMean = function(table,...){
  UseMethod("PGMean",table)
}

PGMean.GXmean = function(table, type){
  name = vector(mode="character", length=0)
  leaf_replicate_number = vector(mode="numeric", length=0)
  Photo_first_mean = vector(mode="numeric", length=0)
  sd1 = vector(mode="numeric", length=0)
  Cond_first_mean = vector(mode="numeric", length=0)
  sd2 = vector(mode="numeric", length=0)
  Ci.Ca_first_mean = vector(mode="numeric", length=0)
  sd3 = vector(mode="numeric", length=0)
  Photo_last_mean = vector(mode="numeric", length=0)
  sd4 = vector(mode="numeric", length=0)
  Cond_last_mean = vector(mode="numeric", length=0)
  sd5 = vector(mode="numeric", length=0)
  Ci.Ca_last_mean = vector(mode="numeric", length=0)
  sd6 = vector(mode="numeric", length=0)
  
  if(type == "plot"){
    col = "plot_name"
  }
  if(type == "genotype"){
    col = type
  }
  if(! type %in% c("plot","genotype")){
    stop("Wrong type input. plot/genotype")
  }
  
  for (i in 1:length(unique(table[,col]))){
    sub = table[which(table[,col] == unique(table[,col])[i]),]
    name = c(name, sub[,col][1])
    leaf_replicate_number = c(leaf_replicate_number, nrow(sub))
    Photo_first_mean = c(Photo_first_mean, mean(sub$Photo_first))
    sd1 = c(sd1, sd(sub$Photo_first)/sqrt(length(sub$Photo_first)))
    Cond_first_mean = c(Cond_first_mean, mean(sub$Cond_first))
    sd2 = c(sd2, sd(sub$Cond_first)/sqrt(length(sub$Cond_first)))
    Ci.Ca_first_mean = c(Ci.Ca_first_mean, mean(sub$Ci.Ca_first))
    sd3 = c(sd3, sd(sub$Ci.Ca_first)/sqrt(length(sub$Ci.Ca_first)))
    Photo_last_mean = c(Photo_last_mean, mean(sub$Photo_last))
    sd4 = c(sd4, sd(sub$Photo_last)/sqrt(length(sub$Photo_last)))
    Cond_last_mean = c(Cond_last_mean, mean(sub$Cond_last))
    sd5 = c(sd5, sd(sub$Cond_last)/sqrt(length(sub$Cond_last)))
    Ci.Ca_last_mean = c(Ci.Ca_last_mean, mean(sub$Ci.Ca_last))
    sd6 = c(sd6, sd(sub$Ci.Ca_last)/sqrt(length(sub$Ci.Ca_last)))
  }
  out = data.frame(name, leaf_replicate_number, Photo_first_mean, sd1, Cond_first_mean, 
                   sd2, Ci.Ca_first_mean, sd3, Photo_last_mean, sd4, Cond_last_mean, sd5,
                   Ci.Ca_last_mean, sd6, stringsAsFactors = FALSE)
  out = out[, colSums(is.na(out)) != nrow(out)]
  return(out)
}


out = PGMean.GXmean(test,"plot")


